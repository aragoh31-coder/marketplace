# Generated by Django 5.1.4 on 2025-07-23 08:48

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("adminpanel", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AdminProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "secondary_password_hash",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                ("pgp_public_key", models.TextField(blank=True, null=True)),
                (
                    "pgp_fingerprint",
                    models.CharField(blank=True, max_length=40, null=True),
                ),
                ("pgp_required", models.BooleanField(default=True)),
                ("require_triple_auth", models.BooleanField(default=True)),
                ("session_timeout", models.IntegerField(default=3600)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="admin_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AdminAction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("login", "Login"),
                            ("logout", "Logout"),
                            ("user_view", "User View"),
                            ("user_edit", "User Edit"),
                            ("withdrawal_approve", "Withdrawal Approve"),
                            ("withdrawal_reject", "Withdrawal Reject"),
                            ("security_alert", "Security Alert"),
                            ("system_config", "System Configuration"),
                        ],
                        max_length=50,
                    ),
                ),
                ("description", models.TextField()),
                ("details", models.JSONField(blank=True, default=dict)),
                ("session_id", models.CharField(blank=True, max_length=64)),
                ("user_agent_hash", models.CharField(blank=True, max_length=32)),
                ("success", models.BooleanField(default=True)),
                ("error_message", models.TextField(blank=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "admin_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="admin_actions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "target_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["admin_user", "timestamp"],
                        name="adminpanel__admin_u_af356c_idx",
                    ),
                    models.Index(
                        fields=["action", "timestamp"],
                        name="adminpanel__action_801d36_idx",
                    ),
                    models.Index(
                        fields=["target_user", "timestamp"],
                        name="adminpanel__target__32bc38_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="SecurityAlert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("failed_login", "Failed Login Attempts"),
                            ("suspicious_activity", "Suspicious Activity"),
                            ("balance_discrepancy", "Balance Discrepancy"),
                            ("bot_detection", "Bot Detection"),
                            ("rate_limit_exceeded", "Rate Limit Exceeded"),
                            ("security_breach", "Security Breach"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        max_length=10,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("details", models.JSONField(blank=True, default=dict)),
                ("is_resolved", models.BooleanField(default=False)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("resolution_notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["severity", "is_resolved", "created_at"],
                        name="adminpanel__severit_d995f2_idx",
                    ),
                    models.Index(
                        fields=["alert_type", "created_at"],
                        name="adminpanel__alert_t_a80d5a_idx",
                    ),
                    models.Index(
                        fields=["user", "created_at"],
                        name="adminpanel__user_id_92296c_idx",
                    ),
                ],
            },
        ),
    ]
