# Generated by Django 5.1.4 on 2025-07-23 14:48

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="BotDetectionLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_key", models.CharField(db_index=True, max_length=40)),
                (
                    "detection_method",
                    models.CharField(
                        choices=[
                            ("user_agent", "User Agent Analysis"),
                            ("behavior", "Behavioral Analysis"),
                            ("timing", "Timing Analysis"),
                            ("honeypot", "Honeypot Triggered"),
                            ("captcha", "CAPTCHA Failed"),
                            ("rate_limit", "Rate Limit Exceeded"),
                            ("pattern", "Pattern Recognition"),
                        ],
                        max_length=20,
                    ),
                ),
                ("user_agent", models.TextField()),
                ("confidence_score", models.IntegerField(default=0)),
                ("details", models.JSONField(default=dict)),
                ("blocked", models.BooleanField(default=False)),
                ("challenge_issued", models.BooleanField(default=False)),
                ("detected_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-detected_at"],
                "indexes": [
                    models.Index(
                        fields=["session_key", "detected_at"],
                        name="security_bo_session_ff550c_idx",
                    ),
                    models.Index(
                        fields=["detection_method", "confidence_score"],
                        name="security_bo_detecti_4df69f_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="CaptchaAttempt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_key", models.CharField(db_index=True, max_length=40)),
                ("challenge_type", models.CharField(default="math", max_length=20)),
                ("challenge_data", models.JSONField(default=dict)),
                ("user_answer", models.CharField(blank=True, max_length=100)),
                ("correct_answer", models.CharField(max_length=100)),
                ("success", models.BooleanField(default=False)),
                ("attempts_count", models.IntegerField(default=1)),
                ("time_taken", models.FloatField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["session_key", "success"],
                        name="security_ca_session_af77e0_idx",
                    ),
                    models.Index(fields=["created_at"], name="security_ca_created_44e54e_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="RateLimitLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_key", models.CharField(db_index=True, max_length=40)),
                (
                    "limit_type",
                    models.CharField(
                        choices=[
                            ("login", "Login Attempts"),
                            ("registration", "Registration Attempts"),
                            ("withdrawal", "Withdrawal Requests"),
                            ("form_submission", "Form Submissions"),
                            ("api_request", "API Requests"),
                            ("captcha", "CAPTCHA Attempts"),
                        ],
                        max_length=20,
                    ),
                ),
                ("attempts_count", models.IntegerField()),
                ("limit_threshold", models.IntegerField()),
                ("time_window", models.IntegerField()),
                ("blocked", models.BooleanField(default=True)),
                ("cooldown_until", models.DateTimeField()),
                ("triggered_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-triggered_at"],
                "indexes": [
                    models.Index(
                        fields=["session_key", "limit_type"],
                        name="security_ra_session_0a9ff8_idx",
                    ),
                    models.Index(fields=["triggered_at"], name="security_ra_trigger_d48375_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="SecurityAuditLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("authentication", "Authentication"),
                            ("authorization", "Authorization"),
                            ("data_access", "Data Access"),
                            ("configuration", "Configuration Change"),
                            ("security_event", "Security Event"),
                            ("admin_action", "Admin Action"),
                            ("system_event", "System Event"),
                        ],
                        max_length=20,
                    ),
                ),
                ("action", models.CharField(max_length=100)),
                ("target_model", models.CharField(blank=True, max_length=50)),
                ("target_id", models.CharField(blank=True, max_length=50)),
                ("details", models.JSONField(default=dict)),
                ("session_key", models.CharField(blank=True, max_length=40)),
                ("user_agent", models.TextField(blank=True)),
                (
                    "risk_level",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                        ],
                        default="low",
                        max_length=10,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["user", "category", "timestamp"],
                        name="security_se_user_id_33f8fc_idx",
                    ),
                    models.Index(
                        fields=["risk_level", "timestamp"],
                        name="security_se_risk_le_5fac2e_idx",
                    ),
                    models.Index(fields=["timestamp"], name="security_se_timesta_9d7fd4_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="SecurityEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("login_attempt", "Login Attempt"),
                            ("failed_login", "Failed Login"),
                            ("bot_detected", "Bot Detected"),
                            ("rate_limited", "Rate Limited"),
                            ("suspicious_activity", "Suspicious Activity"),
                            ("captcha_failed", "CAPTCHA Failed"),
                            ("ip_change", "IP Address Change"),
                            ("session_hijack", "Session Hijack Attempt"),
                            ("withdrawal_attempt", "Withdrawal Attempt"),
                            ("admin_action", "Admin Action"),
                        ],
                        max_length=50,
                    ),
                ),
                ("user_agent", models.TextField(blank=True)),
                ("session_key", models.CharField(blank=True, max_length=40)),
                ("details", models.JSONField(blank=True, default=dict)),
                ("risk_score", models.IntegerField(default=0)),
                ("resolved", models.BooleanField(default=False)),
                ("resolution_notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_security_events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "event_type", "created_at"],
                        name="security_se_user_id_f7052a_idx",
                    ),
                    models.Index(
                        fields=["risk_score", "resolved"],
                        name="security_se_risk_sc_5994b8_idx",
                    ),
                    models.Index(fields=["created_at"], name="security_se_created_841554_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="SessionSecurity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_key", models.CharField(max_length=40, unique=True)),
                ("risk_score", models.IntegerField(default=0)),
                ("bot_probability", models.FloatField(default=0.0)),
                ("first_seen", models.DateTimeField(auto_now_add=True)),
                ("last_activity", models.DateTimeField(auto_now=True)),
                ("page_views", models.IntegerField(default=0)),
                ("avg_page_time", models.FloatField(default=0.0)),
                ("form_submissions", models.IntegerField(default=0)),
                ("failed_attempts", models.IntegerField(default=0)),
                ("is_suspicious", models.BooleanField(default=False)),
                ("is_blocked", models.BooleanField(default=False)),
                ("requires_verification", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(fields=["session_key"], name="security_se_session_27ea9c_idx"),
                    models.Index(
                        fields=["user", "last_activity"],
                        name="security_se_user_id_9cf596_idx",
                    ),
                    models.Index(
                        fields=["risk_score", "is_suspicious"],
                        name="security_se_risk_sc_adedb6_idx",
                    ),
                ],
            },
        ),
    ]
